name: Semantic Release

on:
  workflow_call:
    outputs:
      new_release_version:
        value: ${{ jobs.semantic_release.outputs.new_release_version }}
      new_release_published:
        value: ${{ jobs.semantic_release.outputs.new_release_published }}

jobs:
  semantic_release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        # with:
        #   extra_plugins: |
        #     @semantic-release/changelog@5
        #     @semantic-release/exec@5
        #     @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "new_release_version=${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_OUTPUT
          echo "new_release_published=${{ steps.semantic.outputs.new_release_published }}" >> $GITHUB_OUTPUT
          # echo ${{ steps.semantic.outputs.new_release_major_version }}
          # echo ${{ steps.semantic.outputs.new_release_minor_version }}
          # echo ${{ steps.semantic.outputs.new_release_patch_version }}